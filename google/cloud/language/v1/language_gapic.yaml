type: com.google.api.codegen.ConfigProto
config_schema_version: 1.0.0
language_settings:
  java:
    package_name: com.google.cloud.language.v1
    release_level: GA
  python:
    package_name: google.cloud.language_v1.gapic
  go:
    package_name: cloud.google.com/go/language/apiv1
    release_level: GA
  csharp:
    package_name: Google.Cloud.Language.V1
    release_level: GA
  ruby:
    package_name: Google::Cloud::Language::V1
  php:
    package_name: Google\Cloud\Language\V1
  nodejs:
    package_name: language.v1
    domain_layer_location: google-cloud
license_header:
  copyright_file: copyright-google.txt
  license_file: license-header-apache-2.0.txt
interfaces:
- name: google.cloud.language.v1.LanguageService
  smoke_test:
    method: AnalyzeSentiment
    init_fields:
    - document.content="Hello, world!"
    - document.type=PLAIN_TEXT
  collections: []
  retry_codes_def:
  - name: idempotent
    retry_codes:
    - UNAVAILABLE
    - DEADLINE_EXCEEDED
  - name: non_idempotent
    retry_codes: []
  retry_params_def:
  - name: default
    initial_retry_delay_millis: 100
    retry_delay_multiplier: 1.3
    max_retry_delay_millis: 60000
    initial_rpc_timeout_millis: 60000
    rpc_timeout_multiplier: 1
    max_rpc_timeout_millis: 60000
    total_timeout_millis: 600000
  methods:
  - name: AnalyzeSentiment
    flattening:
      groups:
      - parameters:
        - document
    required_fields:
    - document
    request_object_method: false
    retry_codes_name: idempotent
    retry_params_name: default
    timeout_millis: 30000
    samples:
      standalone:
      - calling_forms: ".*"
        value_sets: language_sentiment_text
        region_tag: language_sentiment_text
      - calling_forms: ".*"
        value_sets: language_sentiment_gcs
        region_tag: language_sentiment_gcs
    sample_value_sets:
    - id: language_sentiment_text
      description: "Analyze sentiment of text"
      parameters:
        defaults:
        - document.type=PLAIN_TEXT
        - document.content="Your text to analyze, e.g. Hello, world!"
        attributes:
        - parameter: document.content
          sample_argument_name: content
      on_success:
      - define: sentiment=$resp.document_sentiment
      - print:
        - "score: %s"
        - sentiment.score
      - print:
        - "magnitude: %s"
        - sentiment.magnitude

    - id: language_sentiment_gcs
      description: "Analyze sentiment of text stored in GCS"
      parameters:
        defaults:
        - document.type=PLAIN_TEXT
        - document.gcs_content_uri="Path to text file, e.g. gs://my-bucket/textfile"
        attributes:
        - parameter: document.gcs_content_uri # can this be renamed?
          sample_argument_name: uri
      on_success:
      - define: sentiment=$resp.document_sentiment
      - print:
        - "score: %s"
        - sentiment.score
      - print:
        - "magnitude: %s"
        - sentiment.magnitude
    
  - name: AnalyzeEntities
    flattening:
      groups:
      - parameters:
        - document
        - encoding_type
    required_fields:
    - document
    request_object_method: true
    retry_codes_name: idempotent
    retry_params_name: default
    timeout_millis: 30000
  - name: AnalyzeEntitySentiment
    samples:
      standalone:
      - calling_forms: ".*"
        value_sets: entity_sentiment_file
        region_tag: language_entity_sentiment_file
      - calling_forms: ".*"
        value_sets: [entity_sentiment_text, entity_sentiment_text_simple]
        region_tag: language_entity_sentiment_text
    sample_value_sets:
    - id: entity_sentiment_file
      description: "Analyze entities and sentiment of a text file"
      parameters:
        defaults:
        - document.gcs_content_uri="gs://cloud-samples-data/language/president.txt"
        - document.type=PLAIN_TEXT
        attributes:
        - parameter: document.gcs_content_uri
          sample_argument_name: gcs_uri
      on_success:
        - loop:
            variable: entity
            collection: $resp.entities
            body:
            - print:
              - "Name: %s"
              - entity.name
            - loop:
                variable: mention
                collection: entity.mentions
                body:
                - print:
                  - "  - Begin offset : %s"
                  - mention.text.begin_offset
                - print:
                  - "    Content : %s"
                  - mention.text.content
                - print:
                  - "    Magnitude : %s"
                  - mention.sentiment.magnitude
                - print:
                  - "    Sentiment : %s"
                  - mention.sentiment.score
                - print:
                  - "    Type : %s"
                  - mention.type
            - print:
              - "  Salience : %s"
              - entity.salience
            - print:
              - "  Aggregate sentiment : %s"
              - entity.sentiment.score
            - print:
              - "  Aggregate sentiment magnitude : %s"
              - entity.sentiment.score
    - id: entity_sentiment_text
      description: "Analyze entities and sentiment of a text string"
      parameters:
        defaults:
        - document.content="A happy President Kennedy celebrated at the White House Saturday."
        - document.type=PLAIN_TEXT
        attributes:
        - parameter: document.content
          sample_argument_name: content
      on_success:
        - loop:
            variable: entity
            collection: $resp.entities
            body:
            - print:
              - "Name: %s"
              - entity.name
            - loop:
                variable: mention
                collection: entity.mentions
                body:
                - print:
                  - "  - Begin offset : %s"
                  - mention.text.begin_offset
                - print:
                  - "    Content : %s"
                  - mention.text.content
                - print:
                  - "    Magnitude : %s"
                  - mention.sentiment.magnitude
                - print:
                  - "    Sentiment : %s"
                  - mention.sentiment.score
                - print:
                  - "    Type : %s"
                  - mention.type
            - print:
              - "  Salience : %s"
              - entity.salience
            - print:
              - "  Aggregate sentiment : %s"
              - entity.sentiment.score
            - print:
              - "  Aggregate sentiment magnitude : %s"
              - entity.sentiment.score
    - id: entity_sentiment_text_simple
      description: "Analyze entities and sentiment of a text string"
      parameters:
        defaults:
        - document.content="A happy President Kennedy celebrated at the White House Saturday."
        - document.type=PLAIN_TEXT
    flattening:
      groups:
      - parameters:
        - document
        - encoding_type
    required_fields:
    - document
    request_object_method: true
    retry_codes_name: idempotent
    retry_params_name: default
    timeout_millis: 30000
  - name: AnalyzeSyntax
    flattening:
      groups:
      - parameters:
        - document
        - encoding_type
    required_fields:
    - document
    request_object_method: true
    retry_codes_name: idempotent
    retry_params_name: default
    timeout_millis: 30000
  - name: ClassifyText
    flattening:
      groups:
      - parameters:
        - document
    required_fields:
    - document
    request_object_method: true
    retry_codes_name: idempotent
    retry_params_name: default
    timeout_millis: 30000
  - name: AnnotateText
    flattening:
      groups:
      - parameters:
        - document
        - features
        - encoding_type
    required_fields:
    - document
    - features
    request_object_method: true
    retry_codes_name: idempotent
    retry_params_name: default
    timeout_millis: 30000
